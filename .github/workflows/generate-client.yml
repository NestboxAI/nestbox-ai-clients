name: Generate API Client
on:
  push:
    branches:
        - main

permissions:
  contents: write

jobs:
  generate-client:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout API Admin Repository
        uses: actions/checkout@v4
        with:
          repository: 'NestboxAI/nestbox-ai-dashboard-api'
          ref: 'dev'
          path: 'nestbox-ai-dashboard-api'
          token: ${{ secrets.GH_PAT }}

      - name: Checkout API Model Repository
        uses: actions/checkout@v4
        with:
          repository: 'NestboxAI/nestbox-ai-nests'
          ref: 'main'
          path: 'nestbox-ai-nests'
          token: ${{ secrets.GH_PAT }}

      - name: Generate Swagger Specs
        run: |
          mkdir -p specs

          cd nestbox-ai-dashboard-api
          yarn install && yarn build
          npm run generate:swagger
          cp nestbox-ai-admin.json ../specs/openapi-admin.json
          cd ..

          cd nestbox-ai-nests
          pnpm install
          pnpm --filter=@nestbox/nest-agent exec prisma generate
          pnpm --filter=@nestbox/nest-agent build
          pnpm --filter=@nestbox/nest-document build
          node ./packages/nest-agent/scripts/generate-swagger.js agents
          node ./packages/nest-agent/scripts/generate-swagger.js instances
          node ./packages/nest-document/scripts/generate-swagger.js
          cp nestbox-ai-agents.json ../specs/openapi-agents.json
          cp nestbox-ai-instances.json ../specs/openapi-instances.json
          cp nestbox-ai-documents.json ../specs/openapi-documents.json
          cd ..

      - name: Remove API Repositories
        run: rm -rf nestbox-ai-dashboard-api nestbox-ai-nests

      - name: Install OpenAPI Generator CLI
        run: npm install @openapitools/openapi-generator-cli -g

      - name: Validate OpenAPI Specs
        run:  |
          for spec in specs/openapi-*.json; do
            openapi-generator-cli validate -i "$spec"
          done

      - name: Generate API Clients
        run: |
          openapi-generator-cli generate -i specs/openapi-admin.json -g typescript-axios -o admin --skip-validate-spec --additional-properties=supportsES6=true,npmName=@nestbox-ai/admin,npmVersion=1.0.${{ github.run_number }},repositoryUrl=https://github.com/NestboxAI/nestbox-ai-clients.git

          openapi-generator-cli generate -i specs/openapi-documents.json -g typescript-axios -o documents --skip-validate-spec --additional-properties=supportsES6=true,npmName=@nestbox-ai/documents,npmVersion=1.0.${{ github.run_number }},repositoryUrl=https://github.com/NestboxAI/nestbox-ai-clients.git

          openapi-generator-cli generate -i specs/openapi-agents.json -g typescript-axios -o agents --skip-validate-spec --additional-properties=supportsES6=true,npmName=@nestbox-ai/agents,npmVersion=1.0.${{ github.run_number }},repositoryUrl=https://github.com/NestboxAI/nestbox-ai-clients.git

          openapi-generator-cli generate -i specs/openapi-instances.json -g typescript-axios -o instances --skip-validate-spec --additional-properties=supportsES6=true,npmName=@nestbox-ai/instances,npmVersion=1.0.${{ github.run_number }},repositoryUrl=https://github.com/NestboxAI/nestbox-ai-clients.git

      - name: Commit and Push Generated Clients
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add specs admin documents agents instances
          git commit -m "Automatically generated API client from OpenAPI spec [skip ci]" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}

      - name: Setup Node.js for npm Publish
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Build and Publish Clients to npm
        run: |
          for client in admin documents agents instances; do
            cd $client
            npm install && npm run build
            npm publish --access public --registry=https://registry.npmjs.org
            cd ..
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
